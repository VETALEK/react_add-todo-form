{"version":3,"sources":["components/TodoCard/TodoCard.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["TodoCard","id","title","userName","completed","useState","isCompleted","setCompleted","className","classNames","type","checked","onChange","target","htmlFor","TodoList","todos","map","todo","users","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","userId","linkedTodos","todosFromServer","linkedUser","find","availableUserNames","App","updateTodos","newCompleted","setNewCompleted","newTitle","setNewTitle","newUsername","setNewUsername","titleError","setTitleError","usernameError","setUsernameError","action","onSubmit","e","preventDefault","isFormValid","length","newTodo","prevs","placeholder","value","match","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0721b57d.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC, useState } from 'react';\n\nimport './TodoCard.scss';\n\ntype Props = {\n  id: number,\n  title: string,\n  userName: string,\n  completed: boolean,\n};\n\nexport const TodoCard: FC<Props> = ({\n  id, title, userName, completed,\n}) => {\n  const [isCompleted, setCompleted] = useState(completed);\n\n  return (\n    <div\n      className={classNames({\n        TodoCard: true,\n        'TodoCard--completed': isCompleted,\n      })}\n    >\n      <input\n        type=\"checkbox\"\n        id={`isDone${id}`}\n        className=\"TodoCard__completedToggler\"\n        checked={isCompleted}\n        onChange={({ target }) => setCompleted(target.checked)}\n      />\n\n      <label\n        htmlFor={`isDone${id}`}\n        className=\"TodoCard__hint\"\n      >\n        Click on card to swithc\n      </label>\n\n      <hr className=\"TodoCard__strip\" />\n\n      <p className=\"TodoCard__title\">\n        {title}\n      </p>\n\n      <p className=\"TodoCard__userName\">\n        {userName}\n      </p>\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport { LinkedTodo } from '../../typedef';\nimport { TodoCard } from '../TodoCard';\n\nimport './TodoList.scss';\n\ntype Props = {\n  todos: LinkedTodo[];\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <ul className=\"TodoList\">\n      {\n        todos.map((todo) => {\n          const {\n            id,\n            title,\n            completed,\n            userName,\n          } = todo;\n\n          return (\n            <li className=\"TodoList__item\" key={id}>\n              <TodoCard\n                id={id}\n                title={title}\n                completed={completed}\n                userName={userName}\n              />\n            </li>\n          );\n        })\n      }\n    </ul>\n  );\n};\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import {\n  FC, useState, FormEventHandler, ChangeEventHandler, ChangeEvent,\n} from 'react';\n\nimport classNames from 'classnames';\nimport { LinkedTodo } from './typedef';\nimport { TodoList } from './components/TodoList';\n\nimport users from './api/users';\nimport todosFromServer from './api/todos';\n\nimport './App.scss';\n\nconst linkedTodos: LinkedTodo[] = todosFromServer.map((todo) => {\n  const linkedUser = users.find(({ id }) => id === todo.userId);\n\n  return {\n    ...todo,\n    userName: (linkedUser)\n      ? linkedUser.username\n      : 'Anonymous',\n  };\n});\n\nconst availableUserNames = users.map(({ username }) => username);\n\nconst App: FC = () => {\n  const [todos, updateTodos] = useState(linkedTodos);\n  const [newCompleted, setNewCompleted] = useState(false);\n  const [newTitle, setNewTitle] = useState('');\n  const [newUsername, setNewUsername] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [usernameError, setUsernameError] = useState(false);\n\n  const addTodoHandler: FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n\n    let isFormValid = true;\n\n    if (newTitle.length < 1) {\n      setTitleError(true);\n      isFormValid = false;\n    }\n\n    if (newTitle.length < 1) {\n      setUsernameError(true);\n      isFormValid = false;\n    }\n\n    if (!isFormValid) {\n      return;\n    }\n\n    const newTodo: LinkedTodo = {\n      id: todos.length + 1,\n      title: newTitle,\n      userName: newUsername,\n      completed: newCompleted,\n    };\n\n    updateTodos((prevs) => [newTodo, ...prevs]);\n\n    setNewTitle('');\n    setNewUsername('');\n  };\n\n  const changeTitleHandler: ChangeEventHandler<HTMLInputElement> = (\n    { target }: ChangeEvent<HTMLInputElement>,\n  ) => {\n    const validator = /[^а-яА-ЯёЁa-zA-Z 0-9]/;\n\n    if (!target.value.match(validator)) {\n      setNewTitle(target.value);\n      setTitleError(false);\n    }\n  };\n\n  const changeUsernameHandler: ChangeEventHandler<HTMLSelectElement> = (\n    { target }: ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setNewUsername(target.value);\n    setUsernameError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <form\n        action=\"GET\"\n        className={classNames(\n          'TodoForm App__todoForm',\n          {\n            'TodoForm--completed': newCompleted,\n            'TodoForm--invalid': titleError || usernameError,\n          },\n        )}\n        onSubmit={addTodoHandler}\n      >\n        <input\n          type=\"checkbox\"\n          name=\"completed\"\n          id=\"isNewCompleted\"\n          className=\"TodoForm__completedToggler\"\n          checked={newCompleted}\n          onChange={({ target }) => setNewCompleted(target.checked)}\n        />\n\n        <label\n          htmlFor=\"isNewCompleted\"\n          className=\"TodoForm__hint\"\n        >\n          {\n            titleError || usernameError\n              ? `\n                ${titleError ? 'No title' : ''}\n                ${usernameError ? 'No username' : ''}\n              ` : 'Click on card to switch'\n          }\n        </label>\n\n        <hr className=\"TodoForm__strip\" />\n\n        <div className=\"InputContainer\">\n          <input\n            name=\"title\"\n            id=\"newTitle\"\n            className=\"TodoForm__title InputContainer__item\"\n            placeholder=\"Task title\"\n            value={newTitle}\n            onChange={changeTitleHandler}\n          />\n        </div>\n\n        <div className=\"InputContainer\">\n          <select\n            name=\"userName\"\n            id=\"newUserName\"\n            className=\"TodoForm__userName InputContainer__item\"\n            value={newUsername}\n            onChange={changeUsernameHandler}\n          >\n            <option value=\"\" disabled>\n              Username\n            </option>\n\n            {\n              availableUserNames.map((userName) => (\n                <option\n                  value={userName}\n                  key={userName}\n                >\n                  {userName}\n                </option>\n              ))\n            }\n          </select>\n\n          <button\n            type=\"submit\"\n            className=\"TodoForm__submitButton InputContainer__item\"\n          >\n            Add todo\n          </button>\n        </div>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}